import { a as addLoc, b as append, c as assign, d as children, e as claimElement, f as claimText, g as createElement, h as createText, i as detachNode, j as init, k as insert, C as noop, l as protoDev } from './chunk.18badf4c.js';

/* src/routes/index.html generated by Svelte v2.15.3 */

const file = "src/routes/index.html";

function create_main_fragment(component, ctx) {
	var text0, h1, text1;

	return {
		c: function create() {
			text0 = createText("\n\n");
			h1 = createElement("h1");
			text1 = createText("Home");
			this.h();
		},

		l: function claim(nodes) {
			text0 = claimText(nodes, "\n\n");

			h1 = claimElement(nodes, "H1", {}, false);
			var h1_nodes = children(h1);

			text1 = claimText(h1_nodes, "Home");
			h1_nodes.forEach(detachNode);
			this.h();
		},

		h: function hydrate() {
			document.title = "500weeks";
			addLoc(h1, file, 4, 0, 55);
		},

		m: function mount(target, anchor) {
			insert(target, text0, anchor);
			insert(target, h1, anchor);
			append(h1, text1);
		},

		p: noop,

		d: function destroy(detach) {
			if (detach) {
				detachNode(text0);
				detachNode(h1);
			}
		}
	};
}

function Index(options) {
	this._debugName = '<Index>';
	if (!options || (!options.target && !options.root)) {
		throw new Error("'target' is a required option");
	}

	init(this, options);
	this._state = assign({}, options.data);
	this._intro = true;

	this._fragment = create_main_fragment(this, this._state);

	if (options.target) {
		var nodes = children(options.target);
		options.hydrate ? this._fragment.l(nodes) : this._fragment.c();
		nodes.forEach(detachNode);
		this._mount(options.target, options.anchor);
	}
}

assign(Index.prototype, protoDev);

Index.prototype._checkReadOnly = function _checkReadOnly(newState) {
};

export default Index;
//# sourceMappingURL=index.85599372.js.map
